-v0.1 2022.12.10 Sherlock init

简介：本文是《ARM64体系结构编程与实践》的读书笔记，本文还用于持续收集ARM64体系结构
      的基本定义。对于可以独立成篇的内容，会在独立的文章中描述，而在本文中给出对应
      的链接。《ARM64体系结构编程与实践》这本书还是比较适合初学者扫盲用的，这本书
      的问题是深入有限，而且对于ARM64上的一些核心外设，比如GICv3/GICv4/SMMU等没有
      给出介绍。


第一章
------

 - ARM 2012年才推出64位的A53和A57，比较晚啊，搞了10年，现在已经到了ARMv9。
 
 - ARMv8里所谓的兼容ARMv7 32位的指令其实是一个幌子。v7和v8的指令编码空间不是一个，
   CPU上提供了模式切换的开关，通过这个开关控制CPU是32位还是64位指令。

 - ARMv8有四个特权级：EL0/EL1/EL2/EL3，31个64bit通用寄存器，主要的系统寄存器有：
   PSTATE，SP_ELx(0/1/2/3)，SPSR_EL(1/2/3)，ELR_ELx(1/2/3)，PC寄存器等等。

   其中，PSTATE表示CPU当前状态，SP_ELx是各个特权态下的栈指针，SPSR_ELx是各个特权态
   下发生异常时PSTATE信息的保存寄存器，ELR_ELx是函数调用时保存返回地址的寄存器。

   可见SP为独立寄存器，在指令中可以使用SP寄存器，当有指令使用SP寄存器时，SP寄存器
   的编码为31，这是因为X31一般是0寄存器。

第二章
-------

 主要是介绍调试环境，有树莓派和qemu的环境。

第三章
-------

 load/store指令相关。

第四章
-------

 这里介绍算数和位移指令。ARM和RISV这里有一个很不一样的地方，算数指令的一部分状态，
 比如，进位溢出之类的信息是保存在PSTATE寄存器的对应bit上的，而RV完全没有相关的设计。

第五章
-------

 比较和跳转指令。

第六章
-------

 这章讲一些特殊指令和系统指令。一些访存指令：ADR/LDR/ADRP/LDXR/STXR/LDAR/STLR，
 trap指令：SVC/HVC/SMC，访问系统寄存器的指令：MRS/MSR，barrier指令：DMB/DSB/ISB。

第十一章
---------

 异常处理。

第十二章
---------

 CPU核中断处理。
